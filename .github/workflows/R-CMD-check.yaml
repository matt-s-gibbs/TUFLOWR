# GitHub Actions workflow for R package checks
name: R Package CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel'}
          - {os: ubuntu-latest, r: 'oldrel-1'}
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::devtools
          needs: check

      - name: Check package
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true

  devtools-checks:
    runs-on: ubuntu-latest
    name: Devtools Extended Checks

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::devtools
            any::testthat
            any::covr
            any::lintr
            any::spelling
            any::goodpractice
            any::git2r
          needs: check

      - name: Document package
        run: |
          devtools::document()
        shell: Rscript {0}

      - name: Check documentation is up to date
        run: |
          # Check if documentation needs updating
          devtools::document()
          # Use git directly instead of git2r
          status_output <- system("git status --porcelain", intern = TRUE)
          if (length(status_output) > 0) {
            cat("Files changed after running devtools::document():\n")
            cat(paste(status_output, collapse = "\n"))
            stop("Documentation is not up to date. Please run devtools::document()")
          }
        shell: Rscript {0}

      - name: Run tests with coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Lint package
        run: |
          # Run lintr but don't fail on URL issues
          lint_results <- lintr::lint_package()
          # Filter out URL-related lints if needed
          non_url_lints <- lint_results[!grepl("URL|url|link", lint_results$message, ignore.case = TRUE)]
          if (length(non_url_lints) > 0) {
            print(non_url_lints)
          }
        shell: Rscript {0}

      - name: Check spelling
        run: |
          spelling::spell_check_package()
        shell: Rscript {0}

      - name: Run goodpractice checks
        run: |
          # Skip URL checks in goodpractice
          gp_result <- goodpractice::gp(checks = setdiff(goodpractice::all_checks(), "urls"))
          print(gp_result)
          if (length(goodpractice::failed_checks(gp_result)) > 0) {
            warning("Some good practice checks failed")
          }
        shell: Rscript {0}

